diff --git a/conda_build/cli/main_convert.py b/conda_build/cli/main_convert.py
index 438b0f12..cce60d79 100644
--- a/conda_build/cli/main_convert.py
+++ b/conda_build/cli/main_convert.py
@@ -60,8 +60,9 @@ all.""",
         '-p', "--platform",
         dest='platforms',
         action="append",
-        choices=['osx-64', 'linux-32', 'linux-64',
-                 'linux-ppc64le', 'linux-armv6l', 'linux-armv7l', 'linux-aarch64',
+        choices=['osx-64', 'osx-arm64',
+                 'linux-32', 'linux-64', 'linux-ppc64', 'linux-ppc64le',
+                 'linux-s390x', 'linux-armv6l', 'linux-armv7l', 'linux-aarch64',
                  'win-32', 'win-64', 'all'],
         help="Platform to convert the packages to.",
         default=None
diff --git a/conda_build/convert.py b/conda_build/convert.py
index 21f47636..1e45487f 100644
--- a/conda_build/convert.py
+++ b/conda_build/convert.py
@@ -763,8 +763,9 @@ def conda_convert(file_path, output_dir=".", show_imports=False, platforms=None,
     source_platform_architecture = '{}-{}' .format(source_platform, architecture)
 
     if 'all' in platforms:
-        platforms = ['osx-64', 'linux-32', 'linux-64',
-                     'linux-ppc64le', 'linux-armv6l', 'linux-armv7l', 'linux-aarch64',
+        platforms = ['osx-64', 'osx-arm64',
+                     'linux-32', 'linux-64', 'linux-ppc64', 'linux-ppc64le',
+                     'linux-s390x', 'linux-armv6l', 'linux-armv7l', 'linux-aarch64',
                      'win-32', 'win-64']
 
     for platform in platforms:
diff --git a/conda_build/environ.py b/conda_build/environ.py
index d86aa0d8..947b49c6 100644
--- a/conda_build/environ.py
+++ b/conda_build/environ.py
@@ -651,9 +651,9 @@ def system_vars(env_dict, m, prefix):
     else:
         unix_vars(m, get_default, prefix)
 
-    if sys.platform == 'darwin':
+    if m.config.host_platform == "osx":
         osx_vars(m, get_default, prefix)
-    elif sys.platform.startswith('linux'):
+    elif m.config.host_platform == "linux":
         linux_vars(m, get_default, prefix)
 
     return d
diff --git a/conda_build/meta b/conda_build/meta
new file mode 100644
index 00000000..e69de29b
diff --git a/conda_build/metadata.py b/conda_build/metadata.py
index 73bf2922..1844a024 100644
--- a/conda_build/metadata.py
+++ b/conda_build/metadata.py
@@ -125,7 +125,7 @@ def ns_cfg(config):
     d['luajit'] = bool(lua[0] == "2")
 
     for machine in non_x86_linux_machines:
-        d[machine] = bool(plat == 'linux-%s' % machine)
+        d[machine] = bool(plat.endswith('-%s' % machine))
 
     for feature, value in feature_list:
         d[feature] = value
diff --git a/conda_build/post.py b/conda_build/post.py
index 1a116f48..a4ec8d60 100644
--- a/conda_build/post.py
+++ b/conda_build/post.py
@@ -396,10 +396,6 @@ def osx_ch_link(path, link_dict, host_prefix, build_prefix, files):
 
 
 def mk_relative_osx(path, host_prefix, build_prefix, files, rpaths=('lib',)):
-    if sys.platform != 'darwin':
-        log = utils.get_logger(__name__)
-        log.warn("Found Mach-O file but patching is only supported on macOS, skipping: %s", path)
-        return
     prefix = build_prefix if exists(build_prefix) else host_prefix
     names = macho.otool(path, prefix)
     s = macho.install_name_change(path, prefix,
@@ -1122,6 +1118,10 @@ def post_process_shared_lib(m, f, files, host_prefix=None):
         mk_relative_linux(f, m.config.host_prefix, rpaths=rpaths,
                           method=m.get_value('build/rpaths_patcher', None))
     elif codefile_t == 'machofile':
+        if m.config.host_platform != 'osx':
+            log = utils.get_logger(__name__)
+            log.warn("Found Mach-O file but patching is only supported on macOS, skipping: %s", path)
+            return
         mk_relative_osx(path, host_prefix, m.config.build_prefix, files=files, rpaths=rpaths)
 
 
diff --git a/conda_build/utils.py b/conda_build/utils.py
index f96d7d07..22beae51 100644
--- a/conda_build/utils.py
+++ b/conda_build/utils.py
@@ -104,6 +104,7 @@ DEFAULT_SUBDIRS = {
     "win-64",
     "win-32",
     "osx-64",
+    "osx-arm64",
     "zos-z",
     "noarch",
 }
